syntax = "proto3";

package pb;

// protoc -I ./ ./mongoBind.proto --go_out=plugins=grpc:./

service MongoBindService {
    rpc SaveDelayedMessage (DelayedMessage) returns (DelayedMessage);
    rpc GetDelayedMessage (DelayedMessage) returns (DelayedMessage);

    rpc AddOneFriendId (UserFriend) returns (UserFriend);
    rpc DelOneFriendId (UserFriend) returns (UserFriend);
    rpc GetAllFriendId (UserFriend) returns (UserFriend);

    rpc AddOneFriendToBlacklist (UserBlacklist) returns (UserBlacklist);
    rpc DelOneFriendFromBlacklist (UserBlacklist) returns (UserBlacklist);
    rpc GetBlacklistOfUser (UserBlacklist) returns (UserBlacklist);

    rpc AddUserToGroupChat (GroupChatInfo) returns (GroupChatInfo);
    rpc DelUserFromGroupChat (GroupChatInfo) returns (GroupChatInfo);
    rpc GetUsersOfGroupChat (GroupChatInfo) returns (GroupChatInfo);

    rpc AddUserToSubscription (SubscriptionInfo) returns (SubscriptionInfo);
    rpc DelUserFromSubscription (SubscriptionInfo) returns (SubscriptionInfo);
    rpc GetUsersOfSubscription (SubscriptionInfo) returns (SubscriptionInfo);

}

// use for save or query delayed message which should sent to when user online
// at once. When the operate is saving, only need use `UserId` and `Message` fields,
// when the operate is query, only need use `UserId` and `MessageList` fields.
message DelayedMessage {
    int64 user_id = 1;
    bytes message = 2;
    repeated bytes message_list = 3;
}

// use for add or delete one friend's id, or query all friend's id.
message UserFriend {
    int64 self_id = 1;
    int64 friend_id = 2;
    repeated int64 friend_id_list = 3;
}

// use for operate the user's blacklist
message UserBlacklist {
    int64 self_id = 1;
    int64 friend_id = 2;
    repeated int64 friend_id_list = 3;
}

// use for operate the group chat data
message GroupChatInfo {
    int64 id = 1;
    int64 user_id = 2;
    repeated int64 user_id_list = 3;
}

// use for operate the subscription of user
message SubscriptionInfo {
    int64 id = 1;
    int64 user_id = 2;
    repeated int64 user_id_list = 3;

}


